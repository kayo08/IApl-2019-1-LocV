/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;
import json.JSONArray;
import json.JSONObject;
import model.bean.Client;
import model.dao.ClientDAO;

/**
 *
 * @author Murilo
 */
public class ViewClient extends javax.swing.JFrame {

    String mode;
    String option;
    private String selected = "Portuguese";

    /**
     * Creates new form viewClient
     */
    public ViewClient(String language) {
        initComponents();
        setLocationRelativeTo(null);
        this.selected = language;
        changeLanguage(selected);
        startWindowClient();
        readJTable();
        mode = "Free";
        manipulateInterfaceClient();
        DefaultTableModel model = (DefaultTableModel) table_client_clients.getModel();
        table_client_clients.setRowSorter(new TableRowSorter(model));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    public void manipulateInterfaceClient() {
        switch (mode) {
            case "Free":
                button_client_save.setEnabled(false);
                button_client_cancel.setEnabled(false);
                field_client_name.setEnabled(false);
                field_client_cpf.setEnabled(false);
                field_client_rg.setEnabled(false);
                field_client_nationality.setEnabled(false);
                field_client_telephone.setEnabled(false);
                field_client_birth.setEnabled(false);
                field_client_gender.setEnabled(false);
                button_client_new.setEnabled(true);
                button_client_edit.setEnabled(false);
                button_client_delete.setEnabled(false);
                break;
            case "New":
                button_client_save.setEnabled(true);
                button_client_cancel.setEnabled(true);
                field_client_name.setEnabled(true);
                field_client_cpf.setEnabled(true);
                field_client_rg.setEnabled(true);
                field_client_nationality.setEnabled(true);
                field_client_telephone.setEnabled(true);
                field_client_birth.setEnabled(true);
                field_client_gender.setEnabled(true);
                button_client_new.setEnabled(false);
                button_client_edit.setEnabled(false);
                button_client_delete.setEnabled(false);
                break;
            case "Edit":
                button_client_save.setEnabled(true);
                button_client_cancel.setEnabled(true);
                field_client_name.setEnabled(true);
                field_client_cpf.setEnabled(true);
                field_client_rg.setEnabled(true);
                field_client_nationality.setEnabled(true);
                field_client_telephone.setEnabled(true);
                field_client_birth.setEnabled(true);
                field_client_gender.setEnabled(true);
                button_client_new.setEnabled(false);
                button_client_edit.setEnabled(false);
                button_client_delete.setEnabled(false);
                break;
            case "Delete":
                button_client_save.setEnabled(false);
                button_client_cancel.setEnabled(false);
                field_client_name.setEnabled(false);
                field_client_cpf.setEnabled(false);
                field_client_rg.setEnabled(false);
                field_client_nationality.setEnabled(false);
                field_client_telephone.setEnabled(false);
                field_client_birth.setEnabled(false);
                field_client_gender.setEnabled(false);
                button_client_new.setEnabled(true);
                button_client_edit.setEnabled(false);
                button_client_delete.setEnabled(false);
                break;
            case "Selection":
                button_client_save.setEnabled(false);
                button_client_cancel.setEnabled(false);
                field_client_name.setEnabled(false);
                field_client_cpf.setEnabled(false);
                field_client_rg.setEnabled(false);
                field_client_nationality.setEnabled(false);
                field_client_telephone.setEnabled(false);
                field_client_birth.setEnabled(false);
                field_client_gender.setEnabled(false);
                button_client_new.setEnabled(true);
                button_client_edit.setEnabled(true);
                button_client_delete.setEnabled(true);
                break;
            default:
                System.out.println("Mode invalid");
        }
    }

    private void changeLanguage(String language) {
        switch (language) {
            case "Portuguese":
                button_client_cancel.setText("Cancelar");
                button_client_delete.setText("Excluir");
                button_client_edit.setText("Editar");
                button_client_export.setText("Exportar");
                button_client_import.setText("Importar");
                button_client_menu.setText("Menu principal");
                button_client_new.setText("Novo");
                button_client_save.setText("Salvar");
                button_client_search.setText("Buscar por nome");
                panel_client.setName("Cliente");
                label_birth.setText("Nascimento:");
                label_cpf.setText("CPF:");
                label_gender.setText("Sexo:");
                label_name.setText("Nome:");
                label_nationality.setText("Nacionalidade:");
                label_rg.setText("RG:");
                label_telephone.setText("Telefone:");
                break;
            case "English":
                button_client_cancel.setText("Cancel");
                button_client_delete.setText("Delete");
                button_client_edit.setText("Edit");
                button_client_export.setText("Export");
                button_client_import.setText("Import");
                button_client_menu.setText("Main menu");
                button_client_new.setText("New");
                button_client_save.setText("Save");
                button_client_search.setText("Search by name");
                panel_client.setName("Client");
                label_birth.setText("Birth:");
                label_cpf.setText("CPF:");
                label_gender.setText("Gender:");
                label_name.setText("Name:");
                label_nationality.setText("Nationality:");
                label_rg.setText("RG:");
                label_telephone.setText("Telephone:");
                break;
            case "Spanish":
                button_client_cancel.setText("Cancelar");
                button_client_delete.setText("Borrar");
                button_client_edit.setText("Editar");
                button_client_export.setText("Exportación");
                button_client_import.setText("Importación");
                button_client_menu.setText("Menú principal");
                button_client_new.setText("Nuevo");
                button_client_save.setText("Guardar");
                button_client_search.setText("Buscar por nombre");
                panel_client.setName("Cliente");
                label_birth.setText("Nacimiento:");
                label_cpf.setText("CPF:");
                label_gender.setText("Sexo:");
                label_name.setText("Nombre:");
                label_nationality.setText("Nacionalidad:");
                label_rg.setText("RG:");
                label_telephone.setText("Teléfono");
                break;
            default:
                button_client_cancel.setText("Cancelar");
                button_client_delete.setText("Excluir");
                button_client_edit.setText("Editar");
                button_client_export.setText("Exportar");
                button_client_import.setText("Importar");
                button_client_menu.setText("Menu principal");
                button_client_new.setText("Novo");
                button_client_save.setText("Salvar");
                button_client_search.setText("Buscar por marca");
                panel_client.setName("Cliente");
                label_birth.setText("Nascimento:");
                label_cpf.setText("CPF:");
                label_gender.setText("Sexo:");
                label_name.setText("Nome:");
                label_nationality.setText("Nacionalidade:");
                label_rg.setText("RG:");
                label_telephone.setText("Telefone:");

        }
    }

    public void readJTable() {

        DefaultTableModel model = (DefaultTableModel) table_client_clients.getModel();
        model.setNumRows(0);
        ClientDAO pdao = new ClientDAO();

        for (Client p : pdao.read()) {

            model.addRow(new Object[]{
                p.getName(),
                p.getCpf(),
                p.getRg(),
                p.getNationality(),
                p.getTelephone(),
                p.getGender(),
                p.getBirth()
            });

        }

    }

    public void clearFieldsClient() {
        field_client_name.setText("");
        field_client_cpf.setText("");
        field_client_rg.setText("");
        field_client_nationality.setText("");
        field_client_telephone.setText("");
        field_client_birth.setText("");
        field_client_gender.setText("");
    }

    public void startWindowClient() {
        field_client_name.setText("");
        field_client_cpf.setText("");
        field_client_rg.setText("");
        field_client_nationality.setText("");
        field_client_telephone.setText("");
        field_client_birth.setText("");
        field_client_gender.setText("");
        button_client_menu.setEnabled(true);
        button_client_import.setEnabled(true);
        button_client_export.setEnabled(true);
    }

    public void recordInformationClient() {
        File file = new File("Client.json");
        String content;
        try {

            ClientDAO pdao = new ClientDAO();
            FileWriter f = new FileWriter(file, true);
            for (Client p : pdao.read()) {
                JSONObject json = new JSONObject();
                content = p.toJson().toString();
                content += "\r\n";
                f.write(content);
            }
            f.close();
            JOptionPane.showMessageDialog(null, "Data Exported Successfully!");
        } catch (IOException e) {
            JOptionPane.showMessageDialog(null, "Could not perform this action");
        }
    }

    public void loadInformationClient() {
        try {
            ClientDAO pdao = new ClientDAO();
            FileReader fr = new FileReader("Client.json");
            BufferedReader br = new BufferedReader(fr);

            String str;
            while ((str = br.readLine()) != null) {
                Client p = new Client();
                JSONArray json = new JSONArray(str.toString());
                for (int i = 0; i < json.length(); i++) {
                    JSONObject obj = json.getJSONObject(i);
                    p.setName(obj.getString("name"));
                    p.setCpf(obj.getString("cpf"));
                    p.setRg(obj.getString("rg"));
                    p.setNationality(obj.getString("nationality"));
                    p.setTelephone(obj.getString("telephone"));
                    p.setGender(obj.getString("gender"));
                    if (i + 1 == json.length()) {
                        pdao.create(p);
                    }
                }
            }
            br.close();
            JOptionPane.showMessageDialog(null, "Data Imported Successfully!");
        } catch (IOException e) {
            JOptionPane.showMessageDialog(null, "Could not perform this action!");
        }
    }

    public void readTableByName(String name) {

        DefaultTableModel model = (DefaultTableModel) table_client_clients.getModel();
        model.setNumRows(0);
        ClientDAO pdao = new ClientDAO();

        for (Client p : pdao.readByName(name)) {

            model.addRow(new Object[]{
                p.getName(),
                p.getCpf(),
                p.getRg(),
                p.getNationality(),
                p.getTelephone(),
                p.getGender(),
                p.getBirth()
            });

        }
    }

    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panel_client = new javax.swing.JPanel();
        label_name = new javax.swing.JLabel();
        field_client_name = new javax.swing.JTextField();
        label_cpf = new javax.swing.JLabel();
        field_client_cpf = new javax.swing.JTextField();
        label_rg = new javax.swing.JLabel();
        label_nationality = new javax.swing.JLabel();
        label_telephone = new javax.swing.JLabel();
        label_birth = new javax.swing.JLabel();
        label_gender = new javax.swing.JLabel();
        field_client_rg = new javax.swing.JTextField();
        field_client_nationality = new javax.swing.JTextField();
        field_client_telephone = new javax.swing.JTextField();
        field_client_birth = new javax.swing.JTextField();
        field_client_gender = new javax.swing.JTextField();
        button_client_save = new javax.swing.JButton();
        button_client_cancel = new javax.swing.JButton();
        button_client_menu = new javax.swing.JButton();
        button_client_export = new javax.swing.JButton();
        button_client_import = new javax.swing.JButton();
        button_client_edit = new javax.swing.JButton();
        button_client_new = new javax.swing.JButton();
        button_client_delete = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        table_client_clients = new javax.swing.JTable();
        button_client_search = new javax.swing.JButton();
        field_client_search = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        panel_client.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Cliente", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 18))); // NOI18N
        panel_client.setPreferredSize(new java.awt.Dimension(750, 260));

        label_name.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        label_name.setText("Nome:");

        field_client_name.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                field_client_nameActionPerformed(evt);
            }
        });

        label_cpf.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        label_cpf.setText("CPF:");

        label_rg.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        label_rg.setText("RG:");

        label_nationality.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        label_nationality.setText("Nacionalidade:");

        label_telephone.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        label_telephone.setText("Telefone:");

        label_birth.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        label_birth.setText("Nascimento:");

        label_gender.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        label_gender.setText("Sexo:");

        field_client_rg.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                field_client_rgActionPerformed(evt);
            }
        });

        field_client_nationality.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                field_client_nationalityActionPerformed(evt);
            }
        });

        field_client_birth.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                field_client_birthActionPerformed(evt);
            }
        });

        button_client_save.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        button_client_save.setText("Salvar");
        button_client_save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button_client_saveActionPerformed(evt);
            }
        });

        button_client_cancel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        button_client_cancel.setText("Cancelar");
        button_client_cancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button_client_cancelActionPerformed(evt);
            }
        });

        button_client_menu.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        button_client_menu.setText("Menu principal");
        button_client_menu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button_client_menuActionPerformed(evt);
            }
        });

        button_client_export.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        button_client_export.setText("Exportar Dados");
        button_client_export.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button_client_exportActionPerformed(evt);
            }
        });

        button_client_import.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        button_client_import.setText("Importar Dados");
        button_client_import.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button_client_importActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panel_clientLayout = new javax.swing.GroupLayout(panel_client);
        panel_client.setLayout(panel_clientLayout);
        panel_clientLayout.setHorizontalGroup(
            panel_clientLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_clientLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panel_clientLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(label_gender)
                    .addComponent(label_birth)
                    .addComponent(label_telephone)
                    .addComponent(label_nationality)
                    .addComponent(label_name)
                    .addComponent(label_cpf)
                    .addComponent(label_rg))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panel_clientLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panel_clientLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(panel_clientLayout.createSequentialGroup()
                            .addGroup(panel_clientLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(field_client_gender, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 150, Short.MAX_VALUE)
                                .addComponent(field_client_birth, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(field_client_telephone, javax.swing.GroupLayout.Alignment.LEADING))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panel_clientLayout.createSequentialGroup()
                            .addGroup(panel_clientLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(field_client_nationality, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 153, Short.MAX_VALUE)
                                .addComponent(field_client_rg))
                            .addGap(27, 27, 27)))
                    .addGroup(panel_clientLayout.createSequentialGroup()
                        .addGroup(panel_clientLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(field_client_cpf, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 150, Short.MAX_VALUE)
                            .addComponent(field_client_name, javax.swing.GroupLayout.Alignment.LEADING))
                        .addGap(30, 30, 30)))
                .addGroup(panel_clientLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(panel_clientLayout.createSequentialGroup()
                        .addGap(101, 101, 101)
                        .addComponent(button_client_menu, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(panel_clientLayout.createSequentialGroup()
                        .addGroup(panel_clientLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(button_client_save, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(button_client_export, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(52, 52, 52)
                        .addGroup(panel_clientLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(button_client_import, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(button_client_cancel, javax.swing.GroupLayout.DEFAULT_SIZE, 130, Short.MAX_VALUE))))
                .addGap(90, 90, 90))
        );
        panel_clientLayout.setVerticalGroup(
            panel_clientLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_clientLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panel_clientLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(panel_clientLayout.createSequentialGroup()
                        .addGroup(panel_clientLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(label_name)
                            .addComponent(field_client_name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(panel_clientLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(field_client_cpf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(label_cpf)))
                    .addGroup(panel_clientLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(button_client_import)
                        .addComponent(button_client_export)))
                .addGroup(panel_clientLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panel_clientLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(panel_clientLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(label_rg)
                            .addComponent(field_client_rg, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(panel_clientLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(label_nationality)
                            .addComponent(field_client_nationality, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(panel_clientLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(label_telephone)
                            .addComponent(field_client_telephone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(panel_clientLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(label_birth)
                            .addComponent(field_client_birth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(button_client_menu))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(panel_clientLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(label_gender)
                            .addComponent(field_client_gender, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(panel_clientLayout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addGroup(panel_clientLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(button_client_cancel)
                            .addComponent(button_client_save))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        button_client_edit.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        button_client_edit.setText("Editar");
        button_client_edit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button_client_editActionPerformed(evt);
            }
        });

        button_client_new.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        button_client_new.setText("Novo");
        button_client_new.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button_client_newActionPerformed(evt);
            }
        });

        button_client_delete.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        button_client_delete.setText("Excluir");
        button_client_delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button_client_deleteActionPerformed(evt);
            }
        });

        table_client_clients.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        table_client_clients.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nome", "Cpf", "Rg", "Nacionalidade", "Telefone", "Sexo", "Nascimento"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        table_client_clients.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                table_client_clientsMouseClicked(evt);
            }
        });
        table_client_clients.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                table_client_clientsKeyReleased(evt);
            }
        });
        jScrollPane1.setViewportView(table_client_clients);

        button_client_search.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        button_client_search.setText("Buscar por nome");
        button_client_search.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button_client_searchActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1)
            .addComponent(panel_client, javax.swing.GroupLayout.DEFAULT_SIZE, 693, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(button_client_new, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29)
                .addComponent(button_client_edit, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addComponent(button_client_delete, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(field_client_search, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addComponent(button_client_search)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(field_client_search, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(button_client_search)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(button_client_edit)
                        .addComponent(button_client_new)
                        .addComponent(button_client_delete)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panel_client, javax.swing.GroupLayout.DEFAULT_SIZE, 237, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void field_client_nameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_field_client_nameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_field_client_nameActionPerformed

    private void field_client_rgActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_field_client_rgActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_field_client_rgActionPerformed

    private void field_client_nationalityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_field_client_nationalityActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_field_client_nationalityActionPerformed

    private void field_client_birthActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_field_client_birthActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_field_client_birthActionPerformed

    private void button_client_saveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button_client_saveActionPerformed
        DateFormat fmt = new SimpleDateFormat("yyyy-MM-dd");
        java.sql.Date data = null;
        try {
            data = new java.sql.Date(fmt.parse(field_client_birth.getText()).getTime());
        } catch (ParseException ex) {
            Logger.getLogger(ViewClient.class.getName()).log(Level.SEVERE, null, ex);
        }
        if (option == "Edit") {
            Client p = new Client();
            ClientDAO dao = new ClientDAO();
            p.setName(field_client_name.getText());
            p.setCpf(field_client_cpf.getText());
            p.setRg(field_client_rg.getText());
            p.setNationality(field_client_nationality.getText());
            p.setTelephone(field_client_telephone.getText());
            p.setGender(field_client_gender.getText());
            p.setBirth(data);
            dao.update(p);
            readJTable();
            option = "";
            mode = "Free";
            manipulateInterfaceClient();
            clearFieldsClient();
        }
        if (option == "Save") {
            Client p = new Client();
            ClientDAO dao = new ClientDAO();
            p.setName(field_client_name.getText());
            p.setCpf(field_client_cpf.getText());
            p.setRg(field_client_rg.getText());
            p.setNationality(field_client_nationality.getText());
            p.setTelephone(field_client_telephone.getText());
            p.setGender(field_client_gender.getText());
            p.setBirth(data);
            dao.create(p);
            clearFieldsClient();
            readJTable();
            mode = "Free";
            option = "";
            manipulateInterfaceClient();
        }
    }//GEN-LAST:event_button_client_saveActionPerformed

    private void button_client_cancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button_client_cancelActionPerformed
        clearFieldsClient();
        mode = "Free";
        manipulateInterfaceClient();
    }//GEN-LAST:event_button_client_cancelActionPerformed

    private void button_client_editActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button_client_editActionPerformed
        mode = "Edit";
        manipulateInterfaceClient();
        option = "Edit";
    }//GEN-LAST:event_button_client_editActionPerformed

    private void button_client_newActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button_client_newActionPerformed
        clearFieldsClient();
        mode = "New";
        option = "Save";
        manipulateInterfaceClient();
    }//GEN-LAST:event_button_client_newActionPerformed

    private void button_client_deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button_client_deleteActionPerformed
        if (table_client_clients.getSelectedRow() != -1) {
            Client p = new Client();
            ClientDAO dao = new ClientDAO();
            p.setCpf((String) table_client_clients.getValueAt(table_client_clients.getSelectedRow(), 1));
            dao.delete(p);

            clearFieldsClient();
            readJTable();

        } else {
            JOptionPane.showMessageDialog(null, "Select a product to exclude");
        }
        mode = "Free";
    }//GEN-LAST:event_button_client_deleteActionPerformed

    private void table_client_clientsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_table_client_clientsMouseClicked
        mode = "Selection";
        manipulateInterfaceClient();
        if (table_client_clients.getSelectedRow() != -1) {
            field_client_name.setText(table_client_clients.getValueAt(table_client_clients.getSelectedRow(), 0).toString());
            field_client_cpf.setText(table_client_clients.getValueAt(table_client_clients.getSelectedRow(), 1).toString());
            field_client_rg.setText(table_client_clients.getValueAt(table_client_clients.getSelectedRow(), 2).toString());
            field_client_nationality.setText(table_client_clients.getValueAt(table_client_clients.getSelectedRow(), 3).toString());
            field_client_telephone.setText(table_client_clients.getValueAt(table_client_clients.getSelectedRow(), 4).toString());
            field_client_gender.setText(table_client_clients.getValueAt(table_client_clients.getSelectedRow(), 6).toString());
            field_client_birth.setText(table_client_clients.getValueAt(table_client_clients.getSelectedRow(), 5).toString());
        }
    }//GEN-LAST:event_table_client_clientsMouseClicked

    private void button_client_searchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button_client_searchActionPerformed
        readTableByName(field_client_search.getText());
    }//GEN-LAST:event_button_client_searchActionPerformed

    private void table_client_clientsKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_table_client_clientsKeyReleased
        if (table_client_clients.getSelectedRow() != -1) {

            field_client_name.setText(table_client_clients.getValueAt(table_client_clients.getSelectedRow(), 0).toString());
            field_client_cpf.setText(table_client_clients.getValueAt(table_client_clients.getSelectedRow(), 1).toString());
            field_client_rg.setText(table_client_clients.getValueAt(table_client_clients.getSelectedRow(), 2).toString());
            field_client_nationality.setText(table_client_clients.getValueAt(table_client_clients.getSelectedRow(), 3).toString());
            field_client_telephone.setText(table_client_clients.getValueAt(table_client_clients.getSelectedRow(), 4).toString());
            field_client_gender.setText(table_client_clients.getValueAt(table_client_clients.getSelectedRow(), 6).toString());
            field_client_birth.setText(table_client_clients.getValueAt(table_client_clients.getSelectedRow(), 5).toString());

        }
    }//GEN-LAST:event_table_client_clientsKeyReleased

    private void button_client_menuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button_client_menuActionPerformed
        this.dispose();
        new ViewHome(selected).setVisible(true);
    }//GEN-LAST:event_button_client_menuActionPerformed

    private void button_client_exportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button_client_exportActionPerformed
        //recordInformationClient();
        String window = "Client";
        new ViewExport(window, selected).setVisible(true);
        this.dispose();
    }//GEN-LAST:event_button_client_exportActionPerformed

    private void button_client_importActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button_client_importActionPerformed
        //loadInformationClient();
        String window = "Client";
        new ViewImport(window, selected).setVisible(true);
        this.dispose();
    }//GEN-LAST:event_button_client_importActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ViewClient.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ViewClient.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ViewClient.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ViewClient.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ViewClient("").setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton button_client_cancel;
    private javax.swing.JButton button_client_delete;
    private javax.swing.JButton button_client_edit;
    private javax.swing.JButton button_client_export;
    private javax.swing.JButton button_client_import;
    private javax.swing.JButton button_client_menu;
    private javax.swing.JButton button_client_new;
    private javax.swing.JButton button_client_save;
    private javax.swing.JButton button_client_search;
    private javax.swing.JTextField field_client_birth;
    private javax.swing.JTextField field_client_cpf;
    private javax.swing.JTextField field_client_gender;
    private javax.swing.JTextField field_client_name;
    private javax.swing.JTextField field_client_nationality;
    private javax.swing.JTextField field_client_rg;
    private javax.swing.JTextField field_client_search;
    private javax.swing.JTextField field_client_telephone;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel label_birth;
    private javax.swing.JLabel label_cpf;
    private javax.swing.JLabel label_gender;
    private javax.swing.JLabel label_name;
    private javax.swing.JLabel label_nationality;
    private javax.swing.JLabel label_rg;
    private javax.swing.JLabel label_telephone;
    private javax.swing.JPanel panel_client;
    private javax.swing.JTable table_client_clients;
    // End of variables declaration//GEN-END:variables
}
