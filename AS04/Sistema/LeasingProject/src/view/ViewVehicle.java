/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;
import json.JSONArray;
import json.JSONObject;
import model.bean.Vehicle;
import model.dao.VehicleDAO;

/**
 *
 * @author Murilo
 */
public class ViewVehicle extends javax.swing.JFrame {
    
    private String mode;
    private String option;
    private String selected;

    /**
     * Creates new form viewVehicle
     */
    public ViewVehicle(String language) {
        initComponents();
        setLocationRelativeTo(null);
        this.selected = language;
        changeLanguage(selected);
        startWindowVehicle();
        readJTable();
        mode = "Free";
        manipulateInterfaceVehicle();
        DefaultTableModel model = (DefaultTableModel) table_vehicle_vehicles.getModel();
        table_vehicle_vehicles.setRowSorter(new TableRowSorter(model));
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    private void changeLanguage(String language) {
        switch (language) {
            case "Portuguese":
                button_vehicle_cancel.setText("Cancelar");
                button_vehicle_delete.setText("Excluir");
                button_vehicle_edit.setText("Editar");
                button_vehicle_export.setText("Exportar");
                button_vehicle_import.setText("Importar");
                button_vehicle_menu.setText("Menu principal");
                button_vehicle_new.setText("Novo");
                button_vehicle_save.setText("Salvar");
                button_vehicle_search.setText("Buscar por marca");
                panel_vehicle.setName("Veículo");
                label_brand.setText("Marca:");
                label_color.setText("Cor:");
                label_model.setText("Modelo:");
                label_plate.setText("Placa:");
                label_year.setText("Ano:");
                break;
            case "English":
                button_vehicle_cancel.setText("Cancel");
                button_vehicle_delete.setText("Delete");
                button_vehicle_edit.setText("Edit");
                button_vehicle_export.setText("Export");
                button_vehicle_import.setText("Import");
                button_vehicle_menu.setText("Main menu");
                button_vehicle_new.setText("New");
                button_vehicle_save.setText("Save");
                button_vehicle_search.setText("Search by brand");
                panel_vehicle.setName("Vehicle");
                label_brand.setText("Brand:");
                label_color.setText("Color:");
                label_model.setText("Model:");
                label_plate.setText("Plate:");
                label_year.setText("Year:");
                break;
            case "Spanish":
                button_vehicle_cancel.setText("Cancelar");
                button_vehicle_delete.setText("Borrar");
                button_vehicle_edit.setText("Editar");
                button_vehicle_export.setText("Exportación");
                button_vehicle_import.setText("Importación");
                button_vehicle_menu.setText("Menú principal");
                button_vehicle_new.setText("Nuevo");
                button_vehicle_save.setText("Guardar");
                button_vehicle_search.setText("Buscar por marca");
                panel_vehicle.setName("Vehículo");
                label_brand.setText("Marca:");
                label_color.setText("Color:");
                label_model.setText("Modelo:");
                label_plate.setText("Placa:");
                label_year.setText("Año:");
                break;
            default:
                button_vehicle_cancel.setText("Cancelar");
                button_vehicle_delete.setText("Excluir");
                button_vehicle_edit.setText("Editar");
                button_vehicle_export.setText("Exportar");
                button_vehicle_import.setText("Importar");
                button_vehicle_menu.setText("Menu principal");
                button_vehicle_new.setText("Novo");
                button_vehicle_save.setText("Salvar");
                button_vehicle_search.setText("Buscar por marca");
                panel_vehicle.setName("Veículo");
                label_brand.setText("Marca:");
                label_color.setText("Cor:");
                label_model.setText("Modelo:");
                label_plate.setText("Placa:");
                label_year.setText("Ano:");
            
        }
    }
    
    public void readJTable() {
        
        DefaultTableModel model = (DefaultTableModel) table_vehicle_vehicles.getModel();
        model.setNumRows(0);
        VehicleDAO pdao = new VehicleDAO();
        
        for (Vehicle p : pdao.read()) {
            
            model.addRow(new Object[]{
                p.getBrand(),
                p.getModel(),
                p.getPlate(),
                p.getColor(),
                p.getYear()
            });
            
        }
        
    }
    
    public void manipulateInterfaceVehicle() {
        switch (mode) {
            case "Free":
                button_vehicle_save.setEnabled(false);
                button_vehicle_cancel.setEnabled(false);
                button_vehicle_new.setEnabled(true);
                button_vehicle_edit.setEnabled(false);
                button_vehicle_delete.setEnabled(false);
                field_vehicle_brand.setEnabled(false);
                field_vehicle_model.setEnabled(false);
                field_vehicle_plate.setEnabled(false);
                field_vehicle_color.setEnabled(false);
                field_vehicle_year.setEnabled(false);
                break;
            case "New":
                button_vehicle_save.setEnabled(true);
                button_vehicle_cancel.setEnabled(true);
                button_vehicle_new.setEnabled(false);
                button_vehicle_edit.setEnabled(false);
                button_vehicle_delete.setEnabled(false);
                field_vehicle_brand.setEnabled(true);
                field_vehicle_model.setEnabled(true);
                field_vehicle_plate.setEnabled(true);
                field_vehicle_color.setEnabled(true);
                field_vehicle_year.setEnabled(true);
                break;
            case "Edit":
                button_vehicle_save.setEnabled(true);
                button_vehicle_cancel.setEnabled(true);
                button_vehicle_new.setEnabled(false);
                button_vehicle_edit.setEnabled(false);
                button_vehicle_delete.setEnabled(false);
                field_vehicle_brand.setEnabled(true);
                field_vehicle_model.setEnabled(true);
                field_vehicle_plate.setEnabled(true);
                field_vehicle_color.setEnabled(true);
                field_vehicle_year.setEnabled(true);
                break;
            case "Excluir":
                button_vehicle_save.setEnabled(false);
                button_vehicle_cancel.setEnabled(false);
                button_vehicle_new.setEnabled(true);
                button_vehicle_edit.setEnabled(false);
                button_vehicle_delete.setEnabled(false);
                field_vehicle_brand.setEnabled(false);
                field_vehicle_model.setEnabled(false);
                field_vehicle_plate.setEnabled(false);
                field_vehicle_color.setEnabled(false);
                field_vehicle_year.setEnabled(false);
                break;
            case "Selection":
                button_vehicle_save.setEnabled(false);
                button_vehicle_cancel.setEnabled(false);
                button_vehicle_new.setEnabled(true);
                button_vehicle_edit.setEnabled(true);
                button_vehicle_delete.setEnabled(true);
                field_vehicle_brand.setEnabled(false);
                field_vehicle_model.setEnabled(false);
                field_vehicle_plate.setEnabled(false);
                field_vehicle_color.setEnabled(false);
                field_vehicle_year.setEnabled(false);
                break;
            default:
                System.out.println("Mode invalid");
        }
    }
    
    public void startWindowVehicle() {
        field_vehicle_brand.setText("");
        field_vehicle_model.setText("");
        field_vehicle_plate.setText("");
        field_vehicle_color.setText("");
        field_vehicle_year.setText("");
        button_vehicle_menu.setEnabled(true);
        button_vehicle_import.setEnabled(true);
        button_vehicle_export.setEnabled(true);
    }
    
    public void recordInformationVehicle() {
        File file = new File("Vehicle.json");
        String content;
        try {
            
            VehicleDAO pdao = new VehicleDAO();
            FileWriter f = new FileWriter(file, true);
            for (Vehicle p : pdao.read()) {
                JSONObject json = new JSONObject();
                content = p.toJson().toString();
                content += "\r\n";
                f.write(content);
            }
            f.close();
            JOptionPane.showMessageDialog(null, "Data Exported Successfully!");
        } catch (IOException e) {
            JOptionPane.showMessageDialog(null, "Could not perform this action");
        }
    }
    
    public void loadInformationVehicle() {
        try {
            VehicleDAO pdao = new VehicleDAO();
            FileReader fr = new FileReader("Vehicle.json");
            BufferedReader br = new BufferedReader(fr);
            
            String str;
            while ((str = br.readLine()) != null) {
                Vehicle p = new Vehicle();
                JSONArray json = new JSONArray(str.toString());
                for (int i = 0; i < json.length(); i++) {
                    JSONObject obj = json.getJSONObject(i);
                    p.setBrand(obj.getString("brand"));
                    p.setModel(obj.getString("model"));
                    p.setPlate(obj.getString("plate"));
                    p.setColor(obj.getString("color"));
                    p.setYear(obj.getInt("year"));
                    if (i + 1 == json.length()) {
                        pdao.create(p);
                    }
                }
            }
            br.close();
            JOptionPane.showMessageDialog(null, "Data Imported Successfully!");
        } catch (IOException e) {
            JOptionPane.showMessageDialog(null, "Could not perform this action");
        }
    }
    
    public void clearFieldsVehicle() {
        field_vehicle_brand.setText("");
        field_vehicle_model.setText("");
        field_vehicle_plate.setText("");
        field_vehicle_color.setText("");
        field_vehicle_year.setText("");
    }
    
    public void readTableByBrand(String brand) {
        
        DefaultTableModel model = (DefaultTableModel) table_vehicle_vehicles.getModel();
        model.setNumRows(0);
        VehicleDAO pdao = new VehicleDAO();
        
        for (Vehicle p : pdao.readByBrand(brand)) {
            
            model.addRow(new Object[]{
                p.getBrand(),
                p.getModel(),
                p.getPlate(),
                p.getColor(),
                p.getYear()
            });
            
        }
    }
    
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panel_vehicle = new javax.swing.JPanel();
        label_brand = new javax.swing.JLabel();
        field_vehicle_brand = new javax.swing.JTextField();
        label_model = new javax.swing.JLabel();
        field_vehicle_model = new javax.swing.JTextField();
        label_plate = new javax.swing.JLabel();
        label_color = new javax.swing.JLabel();
        label_year = new javax.swing.JLabel();
        field_vehicle_plate = new javax.swing.JTextField();
        field_vehicle_color = new javax.swing.JTextField();
        field_vehicle_year = new javax.swing.JTextField();
        button_vehicle_save = new javax.swing.JButton();
        button_vehicle_cancel = new javax.swing.JButton();
        button_vehicle_menu = new javax.swing.JButton();
        button_vehicle_export = new javax.swing.JButton();
        button_vehicle_import = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        table_vehicle_vehicles = new javax.swing.JTable();
        button_vehicle_edit = new javax.swing.JButton();
        button_vehicle_new = new javax.swing.JButton();
        button_vehicle_delete = new javax.swing.JButton();
        button_vehicle_search = new javax.swing.JButton();
        field_vehicle_search = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        panel_vehicle.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Veículo", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 18))); // NOI18N
        panel_vehicle.setPreferredSize(new java.awt.Dimension(750, 260));

        label_brand.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        label_brand.setText("Marca:");

        field_vehicle_brand.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                field_vehicle_brandActionPerformed(evt);
            }
        });

        label_model.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        label_model.setText("Modelo:");

        label_plate.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        label_plate.setText("Placa:");

        label_color.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        label_color.setText("Cor:");

        label_year.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        label_year.setText("Ano:");

        field_vehicle_plate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                field_vehicle_plateActionPerformed(evt);
            }
        });

        field_vehicle_color.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                field_vehicle_colorActionPerformed(evt);
            }
        });

        button_vehicle_save.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        button_vehicle_save.setText("Salvar");
        button_vehicle_save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button_vehicle_saveActionPerformed(evt);
            }
        });

        button_vehicle_cancel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        button_vehicle_cancel.setText("Cancelar");
        button_vehicle_cancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button_vehicle_cancelActionPerformed(evt);
            }
        });

        button_vehicle_menu.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        button_vehicle_menu.setText("Menu principal");
        button_vehicle_menu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button_vehicle_menuActionPerformed(evt);
            }
        });

        button_vehicle_export.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        button_vehicle_export.setText("Exportar Dados");
        button_vehicle_export.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button_vehicle_exportActionPerformed(evt);
            }
        });

        button_vehicle_import.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        button_vehicle_import.setText("Importar Dados");
        button_vehicle_import.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button_vehicle_importActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panel_vehicleLayout = new javax.swing.GroupLayout(panel_vehicle);
        panel_vehicle.setLayout(panel_vehicleLayout);
        panel_vehicleLayout.setHorizontalGroup(
            panel_vehicleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_vehicleLayout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(panel_vehicleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(label_year)
                    .addComponent(label_color)
                    .addComponent(label_brand)
                    .addGroup(panel_vehicleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(panel_vehicleLayout.createSequentialGroup()
                            .addGap(10, 10, 10)
                            .addComponent(label_plate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addComponent(label_model, javax.swing.GroupLayout.Alignment.TRAILING)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panel_vehicleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(field_vehicle_year, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 167, Short.MAX_VALUE)
                    .addComponent(field_vehicle_plate)
                    .addComponent(field_vehicle_model)
                    .addComponent(field_vehicle_brand)
                    .addComponent(field_vehicle_color))
                .addGroup(panel_vehicleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panel_vehicleLayout.createSequentialGroup()
                        .addGap(142, 142, 142)
                        .addComponent(button_vehicle_menu, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(panel_vehicleLayout.createSequentialGroup()
                        .addGap(53, 53, 53)
                        .addGroup(panel_vehicleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(button_vehicle_export, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(button_vehicle_save, javax.swing.GroupLayout.DEFAULT_SIZE, 130, Short.MAX_VALUE))
                        .addGap(41, 41, 41)
                        .addGroup(panel_vehicleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(button_vehicle_cancel, javax.swing.GroupLayout.DEFAULT_SIZE, 130, Short.MAX_VALUE)
                            .addComponent(button_vehicle_import, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addGap(82, 82, 82))
        );
        panel_vehicleLayout.setVerticalGroup(
            panel_vehicleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_vehicleLayout.createSequentialGroup()
                .addGroup(panel_vehicleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panel_vehicleLayout.createSequentialGroup()
                        .addGap(82, 82, 82)
                        .addGroup(panel_vehicleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(button_vehicle_cancel)
                            .addComponent(button_vehicle_save))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 33, Short.MAX_VALUE)
                        .addComponent(button_vehicle_menu))
                    .addGroup(panel_vehicleLayout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addGroup(panel_vehicleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(button_vehicle_export)
                            .addComponent(button_vehicle_import))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(panel_vehicleLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panel_vehicleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(label_brand)
                    .addComponent(field_vehicle_brand, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panel_vehicleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(field_vehicle_model, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(label_model))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panel_vehicleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(label_plate)
                    .addComponent(field_vehicle_plate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panel_vehicleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(label_color)
                    .addComponent(field_vehicle_color, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panel_vehicleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(label_year)
                    .addComponent(field_vehicle_year, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        table_vehicle_vehicles.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        table_vehicle_vehicles.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                " Marca", "Modelo", "Placa", "Cor", "Ano"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        table_vehicle_vehicles.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                table_vehicle_vehiclesMouseClicked(evt);
            }
        });
        table_vehicle_vehicles.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                table_vehicle_vehiclesKeyReleased(evt);
            }
        });
        jScrollPane2.setViewportView(table_vehicle_vehicles);

        button_vehicle_edit.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        button_vehicle_edit.setText("Editar");
        button_vehicle_edit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button_vehicle_editActionPerformed(evt);
            }
        });

        button_vehicle_new.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        button_vehicle_new.setText("Novo");
        button_vehicle_new.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button_vehicle_newActionPerformed(evt);
            }
        });

        button_vehicle_delete.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        button_vehicle_delete.setText("Excluir");
        button_vehicle_delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button_vehicle_deleteActionPerformed(evt);
            }
        });

        button_vehicle_search.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        button_vehicle_search.setText("Buscar por marca");
        button_vehicle_search.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button_vehicle_searchActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(button_vehicle_new, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(button_vehicle_edit, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(button_vehicle_delete, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 26, Short.MAX_VALUE)
                .addComponent(field_vehicle_search, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addComponent(button_vehicle_search)
                .addContainerGap())
            .addComponent(jScrollPane2)
            .addComponent(panel_vehicle, javax.swing.GroupLayout.DEFAULT_SIZE, 690, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(field_vehicle_search, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(button_vehicle_new)
                        .addComponent(button_vehicle_edit)
                        .addComponent(button_vehicle_delete)
                        .addComponent(button_vehicle_search)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panel_vehicle, javax.swing.GroupLayout.DEFAULT_SIZE, 205, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void field_vehicle_brandActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_field_vehicle_brandActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_field_vehicle_brandActionPerformed

    private void field_vehicle_plateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_field_vehicle_plateActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_field_vehicle_plateActionPerformed

    private void field_vehicle_colorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_field_vehicle_colorActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_field_vehicle_colorActionPerformed

    private void button_vehicle_saveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button_vehicle_saveActionPerformed
        if (option == "Edit") {
            if (table_vehicle_vehicles.getSelectedRow() != -1) {
                
                Vehicle p = new Vehicle();
                VehicleDAO dao = new VehicleDAO();
                p.setBrand(field_vehicle_brand.getText());
                p.setModel(field_vehicle_model.getText());
                p.setPlate(field_vehicle_plate.getText());
                p.setColor(field_vehicle_color.getText());
                p.setYear(Integer.parseInt(field_vehicle_year.getText()));
                dao.update(p);
                readJTable();
                option = "";
                mode = "Free";
                manipulateInterfaceVehicle();
                clearFieldsVehicle();
            }
        }
        if (option == "Save") {
            Vehicle p = new Vehicle();
            VehicleDAO dao = new VehicleDAO();
            p.setBrand(field_vehicle_brand.getText());
            p.setModel(field_vehicle_model.getText());
            p.setPlate(field_vehicle_plate.getText());
            p.setColor(field_vehicle_color.getText());
            p.setYear(Integer.parseInt(field_vehicle_year.getText()));
            dao.create(p);
            clearFieldsVehicle();
            readJTable();
            option = "";
            mode = "Free";
            manipulateInterfaceVehicle();
        }
    }//GEN-LAST:event_button_vehicle_saveActionPerformed

    private void button_vehicle_cancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button_vehicle_cancelActionPerformed
        clearFieldsVehicle();
        mode = "Free";
        manipulateInterfaceVehicle();
    }//GEN-LAST:event_button_vehicle_cancelActionPerformed

    private void table_vehicle_vehiclesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_table_vehicle_vehiclesMouseClicked
        mode = "Selection";
        manipulateInterfaceVehicle();
        if (table_vehicle_vehicles.getSelectedRow() != -1) {
            
            field_vehicle_brand.setText(table_vehicle_vehicles.getValueAt(table_vehicle_vehicles.getSelectedRow(), 0).toString());
            field_vehicle_model.setText(table_vehicle_vehicles.getValueAt(table_vehicle_vehicles.getSelectedRow(), 1).toString());
            field_vehicle_plate.setText(table_vehicle_vehicles.getValueAt(table_vehicle_vehicles.getSelectedRow(), 2).toString());
            field_vehicle_color.setText(table_vehicle_vehicles.getValueAt(table_vehicle_vehicles.getSelectedRow(), 3).toString());
            field_vehicle_year.setText(table_vehicle_vehicles.getValueAt(table_vehicle_vehicles.getSelectedRow(), 4).toString());
        }
    }//GEN-LAST:event_table_vehicle_vehiclesMouseClicked

    private void button_vehicle_editActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button_vehicle_editActionPerformed
        mode = "Edit";
        manipulateInterfaceVehicle();
        option = "Edit";
    }//GEN-LAST:event_button_vehicle_editActionPerformed

    private void button_vehicle_newActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button_vehicle_newActionPerformed
        clearFieldsVehicle();
        option = "Save";
        mode = "New";
        manipulateInterfaceVehicle();
    }//GEN-LAST:event_button_vehicle_newActionPerformed

    private void button_vehicle_deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button_vehicle_deleteActionPerformed
        if (table_vehicle_vehicles.getSelectedRow() != -1) {
            int index = table_vehicle_vehicles.getSelectedRow();
            Vehicle p = new Vehicle();
            VehicleDAO dao = new VehicleDAO();
            p.setPlate((String) table_vehicle_vehicles.getValueAt(table_vehicle_vehicles.getSelectedRow(), 2));
            dao.delete(p);
            
            clearFieldsVehicle();
            readJTable();
            
        } else {
            JOptionPane.showMessageDialog(null, "Select a product to exclude.");
        }
        mode = "Free";
    }//GEN-LAST:event_button_vehicle_deleteActionPerformed

    private void table_vehicle_vehiclesKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_table_vehicle_vehiclesKeyReleased
        if (table_vehicle_vehicles.getSelectedRow() != -1) {
            
            field_vehicle_brand.setText(table_vehicle_vehicles.getValueAt(table_vehicle_vehicles.getSelectedRow(), 0).toString());
            field_vehicle_model.setText(table_vehicle_vehicles.getValueAt(table_vehicle_vehicles.getSelectedRow(), 1).toString());
            field_vehicle_plate.setText(table_vehicle_vehicles.getValueAt(table_vehicle_vehicles.getSelectedRow(), 2).toString());
            field_vehicle_color.setText(table_vehicle_vehicles.getValueAt(table_vehicle_vehicles.getSelectedRow(), 3).toString());
            field_vehicle_year.setText(table_vehicle_vehicles.getValueAt(table_vehicle_vehicles.getSelectedRow(), 4).toString());
            
        }
    }//GEN-LAST:event_table_vehicle_vehiclesKeyReleased

    private void button_vehicle_searchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button_vehicle_searchActionPerformed
        readTableByBrand(field_vehicle_search.getText());
    }//GEN-LAST:event_button_vehicle_searchActionPerformed

    private void button_vehicle_menuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button_vehicle_menuActionPerformed
        this.dispose();
        new ViewHome(selected).setVisible(true);
    }//GEN-LAST:event_button_vehicle_menuActionPerformed

    private void button_vehicle_exportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button_vehicle_exportActionPerformed
        // recordInformationVehicle();
        String window = "Vehicle";
        new ViewExport(window, selected).setVisible(true);
        this.dispose();
    }//GEN-LAST:event_button_vehicle_exportActionPerformed

    private void button_vehicle_importActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button_vehicle_importActionPerformed
        //loadInformationVehicle();
        String window = "Vehicle";
        new ViewImport(window, selected).setVisible(true);
        this.dispose();
    }//GEN-LAST:event_button_vehicle_importActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ViewVehicle.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ViewVehicle.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ViewVehicle.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ViewVehicle.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ViewVehicle("").setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton button_vehicle_cancel;
    private javax.swing.JButton button_vehicle_delete;
    private javax.swing.JButton button_vehicle_edit;
    private javax.swing.JButton button_vehicle_export;
    private javax.swing.JButton button_vehicle_import;
    private javax.swing.JButton button_vehicle_menu;
    private javax.swing.JButton button_vehicle_new;
    private javax.swing.JButton button_vehicle_save;
    private javax.swing.JButton button_vehicle_search;
    private javax.swing.JTextField field_vehicle_brand;
    private javax.swing.JTextField field_vehicle_color;
    private javax.swing.JTextField field_vehicle_model;
    private javax.swing.JTextField field_vehicle_plate;
    private javax.swing.JTextField field_vehicle_search;
    private javax.swing.JTextField field_vehicle_year;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel label_brand;
    private javax.swing.JLabel label_color;
    private javax.swing.JLabel label_model;
    private javax.swing.JLabel label_plate;
    private javax.swing.JLabel label_year;
    private javax.swing.JPanel panel_vehicle;
    private javax.swing.JTable table_vehicle_vehicles;
    // End of variables declaration//GEN-END:variables
}
