/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.io.StringWriter;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.xml.bind.JAXBContext;
import javax.xml.bind.JAXBException;
import javax.xml.bind.Marshaller;
import javax.xml.bind.Unmarshaller;
import json.JSONObject;
import model.bean.Cliente;
import model.bean.Locacao;
import model.bean.Veiculo;
import model.dao.ClienteDAO;
import model.dao.LocacaoDAO;
import model.dao.VeiculoDAO;
import xml.Veiculos;

/**
 *
 * @author Near
 */
public class ViewExport extends javax.swing.JFrame {

    String janela = "";

    /**
     * Creates new form ViewExport
     */
    public ViewExport(String janela) {
        this.janela = janela;
        initComponents();
        setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        botao_exportar_txt = new javax.swing.JButton();
        botao_exportar_json = new javax.swing.JButton();
        botao_exportar_xml = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel1.setText("Selecione o formato a ser exportado");

        botao_exportar_txt.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        botao_exportar_txt.setText("Txt");
        botao_exportar_txt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botao_exportar_txtActionPerformed(evt);
            }
        });

        botao_exportar_json.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        botao_exportar_json.setText("Json");
        botao_exportar_json.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botao_exportar_jsonActionPerformed(evt);
            }
        });

        botao_exportar_xml.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        botao_exportar_xml.setText("Xml");
        botao_exportar_xml.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botao_exportar_xmlActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(61, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(56, 56, 56))
            .addGroup(layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(botao_exportar_txt, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(56, 56, 56)
                .addComponent(botao_exportar_json, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(botao_exportar_xml, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addComponent(jLabel1)
                .addGap(74, 74, 74)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(botao_exportar_txt)
                    .addComponent(botao_exportar_json)
                    .addComponent(botao_exportar_xml))
                .addContainerGap(147, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void botao_exportar_jsonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botao_exportar_jsonActionPerformed
        switch (janela) {
            case "Veiculo":
                File veiculo = new File("Veiculo.json");
                String conteudoVeiculo;
                try {

                    VeiculoDAO pdao = new VeiculoDAO();
                    FileWriter f = new FileWriter(veiculo, true);
                    for (Veiculo p : pdao.read()) {
                        JSONObject json = new JSONObject();
                        conteudoVeiculo = p.toJson().toString();
                        conteudoVeiculo += "\r\n";
                        f.write(conteudoVeiculo);
                    }
                    f.close();
                    JOptionPane.showMessageDialog(null, "Dados Exportados com sucesso!");
                } catch (IOException e) {
                    JOptionPane.showMessageDialog(null, "Não foi possível realizar esta ação");
                }
                break;
            case "Cliente":
                File cliente = new File("Cliente.json");
                String conteudoCliente;
                try {

                    ClienteDAO pdao = new ClienteDAO();
                    FileWriter f = new FileWriter(cliente, true);
                    for (Cliente p : pdao.read()) {
                        JSONObject json = new JSONObject();
                        conteudoCliente = p.toJson().toString();
                        conteudoCliente += "\r\n";
                        f.write(conteudoCliente);
                    }
                    f.close();
                    JOptionPane.showMessageDialog(null, "Dados Exportados com sucesso!");
                } catch (IOException e) {
                    JOptionPane.showMessageDialog(null, "Não foi possível realizar esta ação");
                }
                break;
            case "Locacao":
                File locacao = new File("Locacao.json");
                String conteudoLocacao;
                try {

                    LocacaoDAO pdao = new LocacaoDAO();
                    FileWriter f = new FileWriter(locacao, true);
                    for (Locacao p : pdao.read()) {
                        JSONObject json = new JSONObject();
                        conteudoLocacao = p.toJson().toString();
                        conteudoLocacao += "\r\n";
                        f.write(conteudoLocacao);
                    }
                    f.close();
                    JOptionPane.showMessageDialog(null, "Dados Exportados com sucesso!");
                } catch (IOException e) {
                    JOptionPane.showMessageDialog(null, "Não foi possível realizar esta ação");
                }
                break;
            default:
                System.out.println("Janela inválida");
        }
        this.dispose();
    }//GEN-LAST:event_botao_exportar_jsonActionPerformed

    private void botao_exportar_xmlActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botao_exportar_xmlActionPerformed
        switch (janela) {
            case "Veiculo":
              /*  JAXBContext jaxbContext;
                VeiculoDAO pdao = new VeiculoDAO();
        try {
            jaxbContext = JAXBContext.newInstance(Veiculos.class);
            Marshaller jaxbMarshaller = jaxbContext.createMarshaller();
            StringWriter sw = new StringWriter();
            Veiculos veiculos = (Veiculos) pdao.read();
            jaxbMarshaller.setProperty(Marshaller.JAXB_FORMATTED_OUTPUT, true);
            jaxbMarshaller.marshal(veiculos, sw);
            System.out.println(sw.toString());
        } catch (JAXBException ex) {
            Logger.getLogger(ViewExport.class.getName()).log(Level.SEVERE, null, ex);
        }*/ 
                break;
            case "Cliente":
                break;
            case "Locacao":
                break;
            default:
                System.out.println("Janela inválida");
        }
        this.dispose();
    }//GEN-LAST:event_botao_exportar_xmlActionPerformed

    private void botao_exportar_txtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botao_exportar_txtActionPerformed
        switch (janela) {
            case "Veiculo":
                break;
            case "Cliente":
                break;
            case "Locacao":
                break;
            default:
                System.out.println("Janela inválida");
        }
        this.dispose();
    }//GEN-LAST:event_botao_exportar_txtActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ViewExport.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ViewExport.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ViewExport.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ViewExport.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ViewExport("").setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton botao_exportar_json;
    private javax.swing.JButton botao_exportar_txt;
    private javax.swing.JButton botao_exportar_xml;
    private javax.swing.JLabel jLabel1;
    // End of variables declaration//GEN-END:variables
}
